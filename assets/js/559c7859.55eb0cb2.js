"use strict";(self.webpackChunkprime_docs=self.webpackChunkprime_docs||[]).push([[435],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return u}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(n),u=i,f=m["".concat(l,".").concat(u)]||m[u]||d[u]||a;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7370:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return c},default:function(){return m}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),o=["components"],s={sidebar_position:4},l=void 0,p={unversionedId:"events-dynamics",id:"events-dynamics",title:"events-dynamics",description:"isrcmport Admonition from '@theme/Admonition';",source:"@site/docs/events-dynamics.md",sourceDirName:".",slug:"/events-dynamics",permalink:"/docs/docs/events-dynamics",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Events Tracking API",permalink:"/docs/docs/events-tracking"}},c=[{value:"The E.S.P. model",id:"the-esp-model",children:[{value:"Event",id:"event",children:[],level:3},{value:"Session",id:"session",children:[],level:3},{value:"Profile",id:"profile",children:[],level:3}],level:2},{value:"The Flow",id:"the-flow",children:[{value:"An example scenario",id:"an-example-scenario",children:[],level:3}],level:2}],d={toc:c};function m(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"isrcmport Admonition from '@theme/Admonition';"),(0,a.kt)("h1",{id:"events-dynamics"},"Events Dynamics"),(0,a.kt)("p",null,"To able to incarnate a profile from raw events, you have to understand the relationship of ",(0,a.kt)("strong",{parentName:"p"},"E"),"vent-",(0,a.kt)("strong",{parentName:"p"},"S"),"ession-",(0,a.kt)("strong",{parentName:"p"},"P"),"rofile (",(0,a.kt)("strong",{parentName:"p"},"E.S.P."),") trinity."),(0,a.kt)("h2",{id:"the-esp-model"},"The E.S.P. model"),(0,a.kt)("h3",{id:"event"},"Event"),(0,a.kt)("p",null,"There are two type of events, ",(0,a.kt)("strong",{parentName:"p"},"behavioral events")," and ",(0,a.kt)("strong",{parentName:"p"},"system events"),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Behavioral events")," are behaviors initiated from a person, it represent actions that users took from real world."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Built-in")," events are events that have predefined behaviors by the system. A prominent example is ",(0,a.kt)("inlineCode",{parentName:"p"},"identify")," event, where it's `target**'s properties are extracted to out and update to the resolved profile."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"System")," events or ",(0,a.kt)("strong",{parentName:"p"},'"reaction"')," events are ones that get generated within the system. Generally these events won't be visible on CDP web app."),(0,a.kt)("h3",{id:"session"},"Session"),(0,a.kt)("p",null,"Every events except ",(0,a.kt)("strong",{parentName:"p"},"system")," events always have a ",(0,a.kt)("inlineCode",{parentName:"p"},"session_id")," attached along. This ",(0,a.kt)("inlineCode",{parentName:"p"},"session_id")," is generated on the client side.\nTheoretically speaking, ",(0,a.kt)("inlineCode",{parentName:"p"},"session_id")," logically groups logical events from a same physical person together. A person (or Profile) could have multiple sessions (from different clients/devices, or long gap between interactions from a same device (it's up the client side to decide the boundary between session)."),(0,a.kt)("h3",{id:"profile"},"Profile"),(0,a.kt)("p",null,"Is a representative object for a physical person. Profiles are bound with a collection of sessions and events. All of it traits and behaviors are inferred from its own events (it means there are no direct mutation on a profile object)."),(0,a.kt)("img",{alt:"ESP Model",src:"/docs/img/events_flow.svg"}),(0,a.kt)("h2",{id:"the-flow"},"The Flow"),(0,a.kt)("p",null,"A typical flow to fabricate a profile is"),(0,a.kt)("h3",{id:"an-example-scenario"},"An example scenario"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step #1"),": First, sending a ",(0,a.kt)("inlineCode",{parentName:"p"},"identify")," event with a specific session ID.\nIn the identify events, specify a PII (",(0,a.kt)("strong",{parentName:"p"},"*P"),"ersonal ",(0,a.kt)("strong",{parentName:"p"},"I"),"dentifiable ",(0,a.kt)("strong",{parentName:"p"},"I"),"nformation on the event's ",(0,a.kt)("inlineCode",{parentName:"p"},"target.properties"),").\nThe ",(0,a.kt)("inlineCode",{parentName:"p"},"target"),"'s ",(0,a.kt)("inlineCode",{parentName:"p"},"itemType")," must be ",(0,a.kt)("inlineCode",{parentName:"p"},'"analyticsUser"')," for now (",(0,a.kt)("inlineCode",{parentName:"p"},"itemId")," \u2014 which usually comes in pair with ",(0,a.kt)("inlineCode",{parentName:"p"},"itemType")," \u2014 can be skipped). An example of an ",(0,a.kt)("inlineCode",{parentName:"p"},"identify")," event's payload:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n    "eventType": "identify",\n    "sessionId": "a-session-id"\n    "target": {\n        "itemType": "analyticsUser",\n        "properties": {\n            "email": "someone@gmail.com"\n        }\n    }\n\n}\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step #2"),": Secondly, sending a desired behavioral events, a ",(0,a.kt)("inlineCode",{parentName:"p"},"click")," for example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n    "eventType": "click",\n    "sessionId": "a-session-id"  // The sessionId must be exactly the same as the identify event above\n    "properties": {\n        "clickedItem": "<some-element-id>",\n        "currentURL": "<some-page-url>"\n    }\n\n}\n')))}m.isMDXComponent=!0}}]);